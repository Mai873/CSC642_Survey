{"version":3,"sources":["logo.svg","Components/googleMap.js","Components/ViewData.js","Components/DataSurveyForm.js","App.js","reportWebVitals.js","index.js"],"names":["dotenv","config","path","mapStyles","marginTop","width","height","position","border","borderRadius","GoogleApiWrapper","apiKey","props","useState","showInfoWindow","setShowInfoWindow","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","lat","lng","latLon","setLatLon","useEffect","getCoordinates","a","url","mapAddress","axios","get","then","response","console","log","data","results","geometry","location","catch","error","google","className","isActive","zoom","style","initialCenter","center","onClick","marker","name","visible","onClose","getDatafromLS","doc","localStorage","getItem","JSON","parse","ViewData","fname","lname","email","contact","address","inches","feet","title","services","budget","boxShadow","background","padding","maxWidth","borderBottom","textAlign","event","removeItem","DataSurveyForm","setFname","setlname","setEmail","setTitle","setInches","setFeet","setContact","setAddress","setServices","setBudget","setData","setIsVerified","isbn","errors","setErrors","setIsSubmit","handleRadio","target","value","handleSubmit","e","preventDefault","val","values","pattern","RegExp","length","test","validate","setItem","stringify","onSubmit","autoComplete","for","type","onChange","id","placeholder","required","color","handleServices","selected","handleBudget","rows","paddingRight","sitekey","render","onloadCallback","verifyCallback","top","left","tabindex","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","element","document","getElementById"],"mappings":"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","file":"static/js/main.53a667f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React, { useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config({ path: \"../../config.env\" });\nconst mapStyles = {\n  //   marginRight: \"auto\",\n  marginTop: \"-12px\",\n  width: \"99.5%\",\n  height: \"88.5%\",\n  position: \"relative\",\n  border: \"1px solid var(--light-gray-color)\",\n  borderRadius: \"5px\",\n};\nfunction GoogleMapContainer(props) {\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\n  const [activeMarker, setActiveMarker] = useState({});\n  const [selectedPlace, setSelectedPlace] = useState({});\n  const [latLon, setLatLon] = useState({ lat: 1, lng: 1 });\n\n  useEffect(() => {\n    getCoordinates();\n  }, []);\n\n  const getCoordinates = async () => {\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${props.mapAddress}&key=AIzaSyAuu3XkFNEVFKWbMgxfl62l1Gt-k3HG_V4`;\n    await axios\n      .get(url)\n      .then((response) => {\n        console.log(response);\n        setLatLon(response.data.results[0].geometry.location);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onMarkerClick = (props, marker) => {\n    setSelectedPlace(props);\n    setActiveMarker(marker);\n    setShowInfoWindow(true);\n  };\n\n  const onClose = () => {\n    if (showInfoWindow) {\n      setShowInfoWindow(false);\n      setActiveMarker(null);\n    }\n  };\n\n  const { google } = props;\n\n  return (\n    <Map\n      className={`${props.isActive}`}\n      google={google}\n      zoom={12}\n      style={mapStyles}\n      initialCenter={latLon}\n      center={latLon}\n    >\n      <Marker\n        onClick={onMarkerClick}\n        name={props.mapAddress}\n        position={latLon}\n      />\n      <InfoWindow\n        marker={activeMarker}\n        visible={showInfoWindow}\n        onClose={onClose}\n      >\n        <div>\n          <h4 className='map-name'>{selectedPlace.name}</h4>\n        </div>\n      </InfoWindow>\n    </Map>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBjyS0gcKgo1mWe41S9Y3BJ-mxoBSldy5E\",\n})(GoogleMapContainer);","import React, { useState, useEffect } from \"react\";\nimport GoogleMap from \"./googleMap\";\n// import { Icon, trash } from \"react\";\n// import \"\";\nconst getDatafromLS = () => {\n  const doc = localStorage.getItem(\"data\");\n  if (doc) {\n    return JSON.parse(doc);\n  } else {\n    return [];\n  }\n};\n\nexport const ViewData = ({\n  fname,\n  lname,\n  email,\n  contact,\n  address,\n  inches,\n  feet,\n  title,\n  services,\n  budget,\n}) => {\n  // const [fname, setFname] = useState(\"\");\n  // const [lname, setlname] = useState(\"\");\n  const [data, setData] = useState(getDatafromLS());\n\n  //   const deleteData = (isbn) => {\n  //     const filteredData = data.filter((element, index) => {\n  //       return element.isbn !== isbn;\n  //     });\n  //     setData(filteredData);\n  //   };\n  useEffect(() => {\n    getDatafromLS();\n  }, []);\n  const handleRemoveAll = (e) => {\n    localStorage.removeItem(\"data\");\n  };\n  return (\n    <div className='' style={{}}>\n      <form\n        className='mx-auto border'\n        style={{\n          boxShadow: \" 2px 2px 20px rgba(0, 0, 0, 0.5)\",\n          background: \"#fff\",\n          padding: \"40px 25px\",\n          maxWidth: \"650px\",\n          width: \"100%\",\n          borderRadius: \"25px\",\n        }}\n      >\n        <div className='table-responsive'>\n          <h1 className='fw-bold text-center mb-5'>Survey Data</h1>\n          <div>\n            <div\n              className='mx-auto text-center'\n              style={{ borderBottom: \"1px solid black\", width: \"100%\" }}\n            >\n              <ul\n                className='list-group list-group-flush'\n                style={{ textAlign: \"justify\" }}\n              >\n                <li className='list-group-item'>\n                  <label className='fw-bold'>First Name :</label>\n                  <span className='mx-2'>{fname}</span>\n                </li>\n\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Last Name :</label>\n                  <span className='mx-2'>{lname}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Email:</label>\n                  <span className='mx-2'>{email}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Contact :</label>\n                  <span className='mx-2'>{contact}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Address :</label>\n                  <span className='mx-2'>{address}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Height(inches) :</label>\n                  <span className='mx-2'>{inches}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Height (feet) :</label>\n                  <span className='mx-2'>{feet}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Title :</label>\n                  <span className='mx-2'>{title}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Service :</label>\n                  <span className='mx-2'>{services}</span>\n                </li>\n                <li className='list-group-item'>\n                  <label className='fw-bold'>Budget :</label>\n                  <span className='mx-2'>{budget}</span>\n                </li>\n              </ul>\n              <GoogleMap isActive={\"map-container\"} mapAddress={address} />\n            </div>\n          </div>\n        </div>\n\n        <button\n          className='btn btn-danger btn-md my-3'\n          onClick={(event) => handleRemoveAll(event)}\n        >\n          Remove All\n        </button>\n      </form>\n    </div>\n  );\n};","import React, { useState, useEffect } from \"react\";\nimport { View, ViewData } from \"./ViewData\";\nimport Recaptcha from \"react-google-recaptcha\";\nimport GoogleMap from \"./googleMap\";\n// import { Link } from \"react-router-dom\";\n// import \"\";\n\nconst getDatafromLS = () => {\n  const doc = localStorage.getItem(\"data\");\n  if (doc) {\n    return JSON.parse(doc);\n  } else {\n    return [];\n  }\n};\nexport const DataSurveyForm = () => {\n  const [fname, setFname] = useState(\"\");\n  const [lname, setlname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [title, setTitle] = useState(\"None\");\n  const [inches, setInches] = useState(\"\");\n  const [feet, setFeet] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [services, setServices] = useState(\"\");\n  const [budget, setBudget] = useState(\"\");\n  const [data, setData] = useState(getDatafromLS());\n  const [isVerified, setIsVerified] = useState(false);\n  const [isbn, setIsbn] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleServices = (event) => {\n    setServices(event.target.value);\n  };\n\n  const verifyCallback = (response) => {\n    if (response) {\n      setIsVerified(true);\n    }\n  };\n  const recaptchaLoaded = () => {\n    console.log(\"capcha successfully loaded\");\n  };\n  const handleRadio = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const handleBudget = (event) => {\n    setBudget(event.target.value);\n  };\n\n  const validate = (values) => {\n    const error = {};\n    var pattern = new RegExp(/^[0-9\\b]+$/);\n    const regex =\n      /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (!values.fname.length > 3 || !values.fname.length < 40) {\n      error.fname =\n        \"First Name length must be greater than 3 and less than 40 characters\";\n    }\n    if (!values.lname.length > 3 || !values.lname.length < 40) {\n      error.lname =\n        \"Last Name length must be greater than 3 and less than 40 characters\";\n    }\n    if (!regex.test(values.email)) {\n      error.email = \"Plz Enter Valid Email\";\n    }\n    if (\n      !pattern.test(values.contact) ||\n      !pattern.test(values.contact).length < 11\n    ) {\n      error.contact =\n        \"Plz Enter Valid Contact only numbers or Length must be equal to 10 characters\";\n    }\n    if (!values.address.length < 40) {\n      error.address = \"Address Must be less than or equal to 40 characters\";\n    }\n    return error;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // const { name, value } = e.target;\n\n    let val = {\n      isbn,\n      fname,\n      lname,\n      email,\n      contact,\n      inches,\n      feet,\n      address,\n      title,\n      services,\n      budget,\n    };\n\n    setErrors(validate(val));\n\n    setData({ ...data, val });\n\n    setIsSubmit(true);\n    // setErrors({});\n\n    // setFname(\"\");\n    // setlname(\"\");\n    // setEmail(\"\");\n    // setContact(\"\");\n    // setInches(\"\");\n    // setFeet(\"\");\n    // setAddress(\"\");\n    // setTitle(\"\");\n    // setServices(\"\");\n    // setBudget(\"\");\n    // setErrors({});\n  };\n\n  useEffect(() => {\n    // storing input name\n    // console.log(errors, \"llllllll\");\n    // if (Object.getOwnPropertyNames(errors).length === 0 && isSubmit) {\n    localStorage.setItem(\"data\", JSON.stringify(data));\n    setErrors({});\n    // alert(\"You have successfully subscribed!\");\n    // console.log(data, \"hi data\");\n    // setIsSubmit(true);\n    // }\n  }, [data]);\n\n  function getStorageValue(key, defaultValue) {}\n\n  return (\n    <>\n      <div className='container my-5' style={{ width: \"100%\" }}>\n        <>\n          <form\n            className='mx-auto border'\n            onSubmit={(event) => handleSubmit(event)}\n            autoComplete='off'\n            style={{\n              width: \"100%\",\n              maxWidth: \"700px\",\n              boxShadow: \" 2px 2px 20px rgba(0, 0, 0, 0.5)\",\n              background: \"#fff\",\n              padding: \"40px 25px\",\n              borderRadius: \"25px\",\n            }}\n          >\n            <h1 className='text-center'>Data Survey</h1>\n            <div className=''>\n              <div className='mb-3'>\n                <label for='exampleFormControlInput1' className='form-label'>\n                  First Name\n                </label>\n                <input\n                  type='text'\n                  value={fname}\n                  onChange={(e) => setFname(e.target.value)}\n                  className='form-control'\n                  id='exampleFormControlInput1'\n                  placeholder='First Name'\n                  required\n                />\n                <p style={{ color: \"red\" }}>{errors.fname}</p>\n              </div>\n              <div className='mb-3'>\n                <label for='exampleFormControlInput1' className='form-label'>\n                  Last Name\n                </label>\n                <input\n                  type='text'\n                  className='form-control'\n                  value={lname}\n                  onChange={(e) => setlname(e.target.value)}\n                  id='exampleFormControlInput1'\n                  placeholder='Last Name'\n                  required\n                />\n                <p style={{ color: \"red\" }}>{errors.lname}</p>\n              </div>\n            </div>\n            <div className=''>\n              <div className='mb-3'>\n                <label for='exampleFormControlInput1' className='form-label'>\n                  Email\n                </label>\n\n                <input\n                  type='email'\n                  className='form-control'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  id='exampleFormControlInput1'\n                  placeholder='somene@example.com'\n                  required\n                />\n                <p style={{ color: \"red\" }}>{errors.email}</p>\n              </div>\n              <div className='mb-3'>\n                <label for='exampleFormControlInput1' className='form-label'>\n                  Phone No\n                </label>\n                <input\n                  type='tel'\n                  className='form-control'\n                  id='exampleFormControlInput1'\n                  value={contact}\n                  onChange={(e) => setContact(e.target.value)}\n                  //   placeholder=\"123-45-678\"\n                  //   pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\n                  required\n                />\n                <p style={{ color: \"red\" }}>{errors.contact}</p>\n              </div>\n            </div>\n            <label for='exampleFormControlInput1' className='form-label'>\n              Title\n            </label>\n            <div className='mb-3'>\n              <div className='form-check form-check-inline'>\n                <input\n                  className='form-check-input'\n                  type='radio'\n                  name='inlineRadioOptions'\n                  id='inlineRadio1'\n                  value='None'\n                  onChange={(event) => handleRadio(event)}\n                />\n                <label className='form-check-label' for='inlineRadio1'>\n                  none\n                </label>\n              </div>\n              <div className='form-check form-check-inline'>\n                <input\n                  className='form-check-input'\n                  type='radio'\n                  name='inlineRadioOptions'\n                  id='inlineRadio2'\n                  value='Student'\n                  onChange={(event) => handleRadio(event)}\n                />\n                <label className='form-check-label' for='inlineRadio2'>\n                  Student\n                </label>\n              </div>\n              <div className='form-check form-check-inline'>\n                <input\n                  className='form-check-input'\n                  type='radio'\n                  name='inlineRadioOptions'\n                  id='inlineRadio3'\n                  value='Teacher'\n                  onChange={(event) => handleRadio(event)}\n                />\n                <label className='form-check-label' for='inlineRadio3'>\n                  Teacher\n                </label>\n              </div>\n            </div>\n            <label for='exampleFormControlInput1' className='form-label'>\n              Your Height\n            </label>\n            <div className='d-flex'>\n              <div className='input-group mb-3 w-50'>\n                <span\n                  className='input-group-text'\n                  id='inputGroup-sizing-default'\n                >\n                  Inches\n                </span>\n                <input\n                  type='text'\n                  className='form-control'\n                  aria-label='Sizing example input'\n                  aria-describedby='inputGroup-sizing-default'\n                  value={inches}\n                  onChange={(e) => setInches(e.target.value)}\n                  // required\n                />\n              </div>\n              <div className='input-group mb-3 w-50 mx-2'>\n                <span\n                  className='input-group-text'\n                  id='inputGroup-sizing-default'\n                >\n                  Feet\n                </span>\n                <input\n                  type='text'\n                  className='form-control w-50'\n                  aria-label='Sizing example input'\n                  aria-describedby='inputGroup-sizing-default'\n                  value={feet}\n                  onChange={(e) => setFeet(e.target.value)}\n                  // required\n                />\n              </div>\n            </div>\n            <div className='d-flex'>\n              <select\n                className='form-select w-50'\n                aria-label='Default select example'\n                value={services}\n                onChange={(event) => handleServices(event)}\n                required\n              >\n                <option selected>Check all services you require </option>\n\n                <option value='Email'>Email</option>\n                <option value='Phone'>Phone</option>\n                <option value='Facebook'>Facebook</option>\n                <option value='Twitter'>Twitter</option>\n                <option value='Surface Email'>Surface Mail</option>\n                <option value='Personal Visit'>Personal Visit</option>\n              </select>\n\n              <select\n                className='form-select w-50 mx-2'\n                aria-label='Default select example'\n                value={budget}\n                onChange={(event) => handleBudget(event)}\n                required\n              >\n                <option selected>Your monthly budget for services </option>\n\n                <option value='Less than $ 50'>Less than $ 50</option>\n                <option value='Between $50 and $100'>\n                  Between $50 and $100\n                </option>\n                <option value='Above $100'>Above $100</option>\n              </select>\n            </div>\n            <div className='mb-3 my-2'>\n              <label for='exampleFormControlTextarea1' className='form-label'>\n                Address\n              </label>\n              <textarea\n                className='form-control'\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                id='exampleFormControlTextarea1'\n                rows='3'\n                required\n              ></textarea>\n              <p style={{ color: \"red\" }}>{errors.address}</p>\n            </div>\n            <div className='form-check my-2'>\n              <input\n                className='form-check-input'\n                type='checkbox'\n                value=''\n                id='flexCheckChecked'\n                autoComplete='off'\n                required\n              />\n              <label className='form-check-label' for='flexCheckChecked'>\n                I Agree to terms\n              </label>\n            </div>\n            {/* \n            \n            6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\n             */}\n            <div style={{ width: \"100px\", paddingRight: \"\" }}>\n              <Recaptcha\n                sitekey='6LcDz2QdAAAAAL19WPuy8oB1WJTejl0gnNEG4LuB'\n                render='explicit'\n                onloadCallback={recaptchaLoaded}\n                verifyCallback={verifyCallback}\n              />\n            </div>\n            <input type='submit' className='btn btn-primary my-2' />\n            {/* <a className=\"btn btn-outline-primary mx-2\">View Data</a> */}\n            <button\n              type='button'\n              className='btn btn-outline-primary my-2 mx-2'\n              data-bs-toggle='modal'\n              data-bs-target='#exampleModal'\n              style={{ position: \"relative\", top: \"\", left: \"\" }}\n            >\n              View Data\n            </button>\n          </form>\n        </>\n      </div>\n\n      <div\n        className='modal fade'\n        id='exampleModal'\n        tabindex='-1'\n        aria-labelledby='exampleModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog' style={{ maxWidth: \"600px\" }}>\n          <div className='modal-content' style={{ borderRadius: \"25px\" }}>\n            {!fname ||\n            !lname ||\n            !email ||\n            !contact ||\n            !address ||\n            !title ||\n            !inches ||\n            !feet ||\n            !services ||\n            !budget ? (\n              <div className='p-5'>No Data are added yet</div>\n            ) : (\n              <ViewData\n                data={data}\n                fname={fname}\n                lname={lname}\n                email={email}\n                contact={contact}\n                address={address}\n                title={title}\n                inches={inches}\n                feet={feet}\n                services={services}\n                budget={budget}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};","import logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport { DataSurveyForm } from \"./Components/DataSurveyForm\";\nimport \"./App.css\";\nimport { ViewData } from \"./Components/ViewData\";\n\nconst getDatafromLS = () => {\n  const doc = localStorage.getItem(\"data\");\n  if (doc) {\n    return JSON.parse(doc);\n  } else {\n    return [];\n  }\n};\nfunction App() {\n  const [data, setData] = useState(getDatafromLS());\n  return (\n    <div className='w-100'>\n      <DataSurveyForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Routes>\n        <Route path='/' element={<App />} />\n      </Routes>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}